apiVersion: apps/v1
kind: Deployment
metadata:
  name: "loki"
  namespace: "{{ .Values.global.services_namespace }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "loki"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "loki"
    spec:
      initContainers:
        - name: volume-permissions
          image: "{{ .Values.global.registry_url }}:busybox-{{ .Values.global.kaapana_build_version  }}"
          imagePullPolicy:  {{ .Values.global.pull_policy }}
          command: ["sh", "-c", "chown -R 10001:10001 /data && chmod -R 775 /data"]
          volumeMounts:
          - name: loki-data
            mountPath: /data
          securityContext:
            runAsUser: 0
      containers:
      - name: loki
        image: "{{ .Values.global.registry_url }}:loki-{{ .Values.global.kaapana_build_version  }}"
        imagePullPolicy: {{ .Values.global.pull_policy }}
        ports:
        - containerPort: {{ .Values.loki.port }}
          name: http-metrics
        volumeMounts:
        - name: loki-config
          mountPath: /etc/loki
        - name: loki-data
          mountPath: /data
        resources:
          requests:
            memory: {{ .Values.loki.resources.requests.memory }}
            cpu: {{ .Values.loki.resources.requests.cpu }}
          limits:
            memory: {{ .Values.loki.resources.limits.memory }}
            cpu: {{ .Values.loki.resources.limits.cpu }}
      volumes:
      - name: loki-config
        configMap:
          name: loki-config
          items:
            - key: local-config.yaml
              path: local-config.yaml
      - name: loki-data
        persistentVolumeClaim:
          claimName: loki-pv-claim
      securityContext:
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
      imagePullSecrets:
        - name: registry-secret

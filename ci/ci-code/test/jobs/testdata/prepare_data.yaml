- hosts: "{{ ansible_groupname | default('kaapana_depl_server') }}"
  gather_facts: true
  become: no
  remote_user: "{{ lookup('ansible.builtin.env', 'DEPLOYMENT_INSTANCE_USER') }}"
  vars:
    repo_dir: "{{ lookup('ansible.builtin.env', 'REPO_DIR') }}"
    artifacts_dir: "{{ lookup('ansible.builtin.env', 'ARTIFACTS_DIR') }}"
    ip_address: "{{ lookup('ansible.builtin.env', 'ip_address') }}"
  environment:
    CLIENT_SECRET: "{{ lookup('ansible.builtin.env', 'CLIENT_SECRET') }}"

  tasks:
  - name: Install dcmtk
    become: yes
    ansible.builtin.apt:
      state: latest
      pkg:
      - "dcmtk"

  - name: set variables
    ansible.builtin.set_fact:
      test_dir_remote: "{{ ansible_env.HOME }}/data_upload"
  - name: set variables
    ansible.builtin.set_fact:
      series_uids_local: "{{ repo_dir }}/ci-code/test/jobs/testdata/series_uids.txt"
      series_uids_remote: "{{ test_dir_remote }}/testdata/series_uids.txt"

  - name: Download data
    command: "python3 download_data.py --series-file {{ series_uids_local }}"
    register: download
    args:
      chdir: "{{ repo_dir }}/ci-code/test/src"
    delegate_to: 127.0.0.1

  - name: Copy src directory from ci-instance with rsync module
    ansible.posix.synchronize:
      src: "{{ repo_dir  }}/ci-code/test/src"
      dest: "{{ test_dir_remote }}"
      recursive: true
      mode: "push"

  - name: Copy testdata directory from ci-instance with rsync module
    ansible.posix.synchronize:
      src: "{{ repo_dir  }}/ci-code/test/jobs/testdata"
      dest: "{{ test_dir_remote }}/jobs"
      recursive: true
      mode: "push"

  - name: Send testdata to platform
    ignore_errors: true
    register: send_data_log
    ansible.builtin.command: 
      cmd: "python3 send_testdata.py --host {{ ip_address }}"
    args:
      chdir: "{{ test_dir_remote }}/src"

  - name: Save logs from send_testdata.py
    ansible.builtin.copy:
      content: "{{ send_data_log.stdout }} {{ send_data_log.stderr }}"
      dest: "{{ artifacts_dir }}/send-data.log"
    delegate_to: 127.0.0.1

  - name: fail playbook if sending data failed
    when: send_data_log.rc != 0
    ansible.builtin.command:
      cmd: /bin/false

  - name: Wait until data is sent
    register: wait_for_data_log
    ignore_errors: true
    ansible.builtin.command:
      cmd: "python3 wait_for_data.py --host {{ ip_address }} --series-file {{ series_uids_local }} --max-time 300"
    args:
      chdir: "{{ repo_dir }}/ci-code/test/src"
    delegate_to: 127.0.0.1

  - name: Save logs from wait_for_data.py
    ansible.builtin.copy:
      content: "{{ wait_for_data_log.stdout }} {{ wait_for_data_log.stderr }}"
      dest: "{{ artifacts_dir }}/wait-for-data.log"
    delegate_to: 127.0.0.1

  - name: fail playbook if data does not arrive at the platform
    when: wait_for_data_log.rc != 0
    ansible.builtin.command:
      cmd: /bin/false